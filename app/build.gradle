apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.xsmile2008.righttests"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //TODO: use correct API key
        buildConfigField 'String', 'BASE_URL', '"https://openweathermap.org/data/2.5/"'
        buildConfigField 'String', 'API_KEY', '"b6907d289e10d714a6e88b30761fae22"'

        testInstrumentationRunner "com.xsmile2008.righttests.MockTestRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.1'

    //AndroidX
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"

    //Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"

    //Moshi
    implementation("com.squareup.moshi:moshi:1.8.0")
    kapt("com.squareup.moshi:moshi-kotlin-codegen:1.8.0")

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    //Chuck
    debugImplementation 'com.readystatesoftware.chuck:library:1.1.0'
    releaseImplementation 'com.readystatesoftware.chuck:library-no-op:1.1.0'

    //Tests
    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.1'

    testImplementation "androidx.arch.core:core-testing:$lifecycleVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$lifecycleVersion"

    testImplementation 'org.mockito:mockito-core:2.23.4'
    androidTestImplementation 'org.mockito:mockito-android:2.23.4'

    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0"
}

allOpen {
    annotation("com.xsmile2008.righttests.annotations.OpenClass")
}

// Turn on logging for all tests, filter to show failures/skips only
tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        showCauses true
        showExceptions true
        showStackTraces true
        showStandardStreams true
        events "failed", "skipped"
    }
}
